{
  "hash": "d24bbbd3a2c678966720c85051b0412e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Categorical Data — Student Reference\"\nsubtitle: \"Descriptive summaries & visualizations (freq, proportion, crosstabs, bar/pie/mosaic/waffle)\"\ndescription: |\n  A student‑friendly reference with concise explanations, runnable examples,\n  and copy‑paste templates for analyzing and visualizing categorical data in R.\nformat:\n  html:\n    toc: true\n    toc-depth: 3\n    number-sections: true\n    code-tools: true       # show copy button\n    code-fold: false\n    theme: cosmo\n    smooth-scroll: true\neditor: source\nknitr:\n  opts_chunk: \n    echo: true\n    eval: true\n    message: false\n    error: true\n    warnings: false\n    comment: \"#>\" \n---\n\n# Learning goals\n\n- Recognize and work with **categorical variables** in R.\n- Summarize categories using **frequencies** and **proportions** (a.k.a. relative frequency).\n- Create standard plots for categorical data: **bar**, **stacked bar**, **pie**, **mosaic**, and **waffle**.K\n- Read and interpret **cross‑tabulations** (two‑way tables) with row/column/table proportions.\n\n::: callout-tip\nUse the **Copy** button on each code chunk. Many chunks include a **template** version followed by a **worked example**.\n:::\n\n\n# Google Colab Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"tidyverse\")\n# install.packages(\"ggmosaic\")      # mosaic plots\n# install.packages(\"waffle\")        # waffle charts\n# install.packages(\"ggtricks\")      # geom_pie()\n# install.packages(\"ThemePark\")     # optional themes\n\nlibrary(tidyverse)\nlibrary(ggmosaic)\nlibrary(waffle)\nlibrary(ggtricks)\nlibrary(ThemePark)\nlibrary(csucistats)\n```\n:::\n\n\n## Data for this handout\n\nWe will use the **Great American Coffee Taste Test** survey data from TidyTuesday.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ncoffee <- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-05-14/coffee_survey.csv\")\n```\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-113e3987ab161347be52\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-113e3987ab161347be52\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"VZ92Pg\",\"ZdRrQV\",\"RzZojd\",\"BGADV5\",\"bl2LeE\",\"24bqRp\",\"pL4y0y\",\"1rGk8b\",\"Albe2z\",\"xd4bKy\"],[\"45-54 years old\",\"35-44 years old\",\"25-34 years old\",\"25-34 years old\",\"35-44 years old\",\"25-34 years old\",\"25-34 years old\",\"35-44 years old\",\"25-34 years old\",\"25-34 years old\"],[\"2\",\"Less than 1\",\"1\",\"2\",\"1\",\"1\",null,\"3\",\"3\",\"2\"],[\"At home\",\"At home\",\"At home\",\"At home\",\"At home\",\"At the office, At a cafe\",null,\"At home\",\"At home\",\"At home\"],[\"Pod/capsule machine (e.g. Keurig/Nespresso), Pour over, French press\",\"Coffee brewing machine (e.g. Mr. Coffee)\",\"Pour over, Espresso\",\"Pour over, Espresso, French press\",\"Espresso\",null,\"Espresso\",\"Pour over\",\"Espresso, French press\",\"Pour over, Coffee brewing machine (e.g. Mr. Coffee), Other, Instant coffee, Cold brew\"],[null,null,null,null,null,null,null,null,null,\"Aeropress\"],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[\"Cold brew\",\"Regular drip coffee\",\"Latte\",\"Pourover\",\"Americano\",\"Pourover\",\"Mocha\",\"Espresso\",\"Americano\",\"Regular drip coffee\"],[null,null,null,null,null,null,null,null,null,null],[\"No - just black, Milk, dairy alternative, or coffee creamer\",\"Milk, dairy alternative, or coffee creamer, Sugar or sweetener\",\"No - just black\",\"No - just black\",\"No - just black, Milk, dairy alternative, or coffee creamer\",\"No - just black\",\"No - just black\",\"No - just black\",\"No - just black\",\"No - just black\"],[null,null,null,null,null,null,null,null,null,null],[\"Half and half, Oat milk\",\"Half and half\",null,null,\"Skim milk, Whole milk\",null,null,null,null,null],[null,\"Granulated Sugar\",null,null,null,null,null,null,null,null],[\"Bright\",\"Bold\",\"Juicy\",\"Fruity\",\"Caramalized\",\"Fruity\",\"Chocolatey\",\"Floral\",\"Caramalized\",\"Fruity\"],[\"Somewhat strong\",\"Somewhat strong\",\"Very strong\",\"Medium\",\"Somewhat strong\",\"Somewhat strong\",\"Medium\",\"Medium\",\"Somewhat strong\",\"Medium\"],[\"Medium\",\"Medium\",\"Medium\",\"Medium\",\"Dark\",\"Light\",\"Medium\",\"Light\",\"Light\",\"Light\"],[\"Full caffeine\",\"Full caffeine\",\"Full caffeine\",\"Full caffeine\",\"Decaf\",\"Decaf\",\"Full caffeine\",\"Full caffeine\",\"Full caffeine\",\"Full caffeine\"],[6,3,6,7,7,7,6,5,8,6],[2,3,1,4,3,2,2,1,2,2],[3,2,4,5,5,4,3,3,5,2],[1,3,2,1,2,4,null,5,5,3],[\"acid forward bitter with a light finish\",null,\"Overly acidic\",\"Mouth feel was thick and heavy\\n\\nVery fruity/ floral. A bit too much\",\"cranberry and caramel\\n\",\"Caramel, butter, blueberry\",\"Light\",null,\"Caramel, the most balanced, light in mouth\",null],[3,4,3,2,2,4,3,4,3,2],[4,3,3,4,5,3,null,2,4,3],[3,4,3,3,3,1,2,2,5,3],[\"toast lighter body great by itself coffee.\",null,\"SOmboFTokudIVand\",\"Mouth feel was soft and smooth\",\"caramel + Raspberry\",\"Toffee, chocolate\",null,null,\"Caramel, also very balanced, opened up the most at 131F\",null],[4,5,2,3,2,4,3,3,3,2],[2,3,2,4,2,4,null,2,5,3],[4,5,2,1,4,3,4,2,4,3],[\"bread/toast, nice body, not unlike red wine seems like it would be great with food lingering finish\",null,\"Kind of boring\",null,\"chocolate and fruity\",\"Butter, raspberry, chocolate\",null,null,\"Fruity, better hotter\",null],[1,2,2,4,5,1,2,1,3,2],[3,5,4,4,5,5,null,5,3,3],[5,1,4,4,1,5,3,4,4,4],[\"candy! bright, melon acidity makes sense here   sweet finish   winner!\",null,\"Has that weird processing that I like\",\"Mouth feel was clean, smooth, light\",\"whisky\",\"Green apple, black tea\",\"Funky, fermented, very distinct\",null,\"Anis, fuller body, creamy\",null],[\"Coffee C\",\"Coffee C\",\"Coffee B\",\"Coffee B\",\"Coffee B\",\"Coffee A\",\"Coffee C\",\"Coffee A\",\"Coffee A\",\"Coffee A\"],[\"Coffee D\",\"Coffee A\",\"Coffee D\",\"Coffee D\",\"Coffee A\",\"Coffee D\",\"Coffee D\",\"Coffee A\",\"Coffee A\",\"Coffee D\"],[\"Coffee D\",\"Coffee C\",\"Coffee D\",\"Coffee D\",\"Coffee B\",\"Coffee D\",\"Coffee C\",\"Coffee A\",\"Coffee A\",\"Coffee D\"],[\"I primarily work from home\",\"I primarily work from home\",\"I primarily work from home\",\"I primarily work from home\",\"I primarily work from home\",\"I primarily work in person\",null,\"I primarily work from home\",\"I primarily work from home\",\"I primarily work from home\"],[\"$60-$80\",\"&lt;$20\",\"$60-$80\",\"$60-$80\",null,\"&gt;$100\",null,\"$60-$80\",\"$40-$60\",\"$20-$40\"],[\"It tastes good, I need the ritual, I need the caffeine\",\"It tastes good, I need the caffeine\",\"It tastes good, I need the ritual\",\"It tastes good, I need the caffeine, I need the ritual\",\"It tastes good, It makes me go to the bathroom\",\"It tastes good\",null,\"It tastes good\",\"It tastes good, I need the caffeine, I need the ritual\",\"It tastes good, I need the caffeine, It makes me go to the bathroom\"],[null,null,null,null,null,null,null,null,null,null],[\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",null,\"Yes\",\"Yes\",\"Yes\"],[\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",null,\"Yes\",\"Yes\",\"Yes\"],[\"$8-$10\",\"$6-$8\",\"$15-$20\",\"$4-$6\",\"$8-$10\",\"$10-$15\",null,null,\"$8-$10\",\"$6-$8\"],[\"$6-$8\",\"$6-$8\",\"More than $20\",\"$6-$8\",\"$8-$10\",\"More than $20\",null,null,\"$15-$20\",\"$8-$10\"],[\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",null,null,\"No\",\"Yes\"],[\"$300-$500\",\"$20-$50\",\"More than $1,000\",\"More than $1,000\",\"$500-$1000\",\"More than $1,000\",null,\"$300-$500\",\"More than $1,000\",\"$500-$1000\"],[\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"No\",\"Yes\",null,\"Yes\",\"Yes\",\"Yes\"],[\"Female\",\"Female\",\"Male\",\"Male\",\"Female\",\"Male\",null,\"Male\",\"Male\",\"Male\"],[null,null,null,null,null,null,null,null,null,null],[\"Some college or associate's degree\",\"Bachelor's degree\",\"Master's degree\",\"Bachelor's degree\",\"Doctorate or professional degree\",\"Doctorate or professional degree\",null,null,\"Master's degree\",\"Bachelor's degree\"],[\"White/Caucasian\",\"White/Caucasian\",\"White/Caucasian\",\"Hispanic/Latino\",\"Other (please specify)\",\"White/Caucasian\",null,null,\"White/Caucasian\",\"White/Caucasian\"],[null,null,null,null,\"Arab\",null,null,null,null,null],[\"Homemaker\",\"Employed full-time\",\"Employed full-time\",\"Employed full-time\",null,\"Employed full-time\",null,null,\"Employed full-time\",\"Employed full-time\"],[\"More than 3\",\"None\",\"None\",\"1\",\"1\",\"None\",null,null,\"None\",\"None\"],[\"No affiliation\",\"Democrat\",\"No affiliation\",\"Democrat\",null,\"Democrat\",null,null,\"No affiliation\",\"No affiliation\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>submission_id<\\/th>\\n      <th>age<\\/th>\\n      <th>cups<\\/th>\\n      <th>where_drink<\\/th>\\n      <th>brew<\\/th>\\n      <th>brew_other<\\/th>\\n      <th>purchase<\\/th>\\n      <th>purchase_other<\\/th>\\n      <th>favorite<\\/th>\\n      <th>favorite_specify<\\/th>\\n      <th>additions<\\/th>\\n      <th>additions_other<\\/th>\\n      <th>dairy<\\/th>\\n      <th>sweetener<\\/th>\\n      <th>style<\\/th>\\n      <th>strength<\\/th>\\n      <th>roast_level<\\/th>\\n      <th>caffeine<\\/th>\\n      <th>expertise<\\/th>\\n      <th>coffee_a_bitterness<\\/th>\\n      <th>coffee_a_acidity<\\/th>\\n      <th>coffee_a_personal_preference<\\/th>\\n      <th>coffee_a_notes<\\/th>\\n      <th>coffee_b_bitterness<\\/th>\\n      <th>coffee_b_acidity<\\/th>\\n      <th>coffee_b_personal_preference<\\/th>\\n      <th>coffee_b_notes<\\/th>\\n      <th>coffee_c_bitterness<\\/th>\\n      <th>coffee_c_acidity<\\/th>\\n      <th>coffee_c_personal_preference<\\/th>\\n      <th>coffee_c_notes<\\/th>\\n      <th>coffee_d_bitterness<\\/th>\\n      <th>coffee_d_acidity<\\/th>\\n      <th>coffee_d_personal_preference<\\/th>\\n      <th>coffee_d_notes<\\/th>\\n      <th>prefer_abc<\\/th>\\n      <th>prefer_ad<\\/th>\\n      <th>prefer_overall<\\/th>\\n      <th>wfh<\\/th>\\n      <th>total_spend<\\/th>\\n      <th>why_drink<\\/th>\\n      <th>why_drink_other<\\/th>\\n      <th>taste<\\/th>\\n      <th>know_source<\\/th>\\n      <th>most_paid<\\/th>\\n      <th>most_willing<\\/th>\\n      <th>value_cafe<\\/th>\\n      <th>spent_equipment<\\/th>\\n      <th>value_equipment<\\/th>\\n      <th>gender<\\/th>\\n      <th>gender_specify<\\/th>\\n      <th>education_level<\\/th>\\n      <th>ethnicity_race<\\/th>\\n      <th>ethnicity_race_specify<\\/th>\\n      <th>employment_status<\\/th>\\n      <th>number_children<\\/th>\\n      <th>political_affiliation<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"p\",\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[19,20,21,22,24,25,26,28,29,30,32,33,34]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"submission_id\",\"targets\":1},{\"name\":\"age\",\"targets\":2},{\"name\":\"cups\",\"targets\":3},{\"name\":\"where_drink\",\"targets\":4},{\"name\":\"brew\",\"targets\":5},{\"name\":\"brew_other\",\"targets\":6},{\"name\":\"purchase\",\"targets\":7},{\"name\":\"purchase_other\",\"targets\":8},{\"name\":\"favorite\",\"targets\":9},{\"name\":\"favorite_specify\",\"targets\":10},{\"name\":\"additions\",\"targets\":11},{\"name\":\"additions_other\",\"targets\":12},{\"name\":\"dairy\",\"targets\":13},{\"name\":\"sweetener\",\"targets\":14},{\"name\":\"style\",\"targets\":15},{\"name\":\"strength\",\"targets\":16},{\"name\":\"roast_level\",\"targets\":17},{\"name\":\"caffeine\",\"targets\":18},{\"name\":\"expertise\",\"targets\":19},{\"name\":\"coffee_a_bitterness\",\"targets\":20},{\"name\":\"coffee_a_acidity\",\"targets\":21},{\"name\":\"coffee_a_personal_preference\",\"targets\":22},{\"name\":\"coffee_a_notes\",\"targets\":23},{\"name\":\"coffee_b_bitterness\",\"targets\":24},{\"name\":\"coffee_b_acidity\",\"targets\":25},{\"name\":\"coffee_b_personal_preference\",\"targets\":26},{\"name\":\"coffee_b_notes\",\"targets\":27},{\"name\":\"coffee_c_bitterness\",\"targets\":28},{\"name\":\"coffee_c_acidity\",\"targets\":29},{\"name\":\"coffee_c_personal_preference\",\"targets\":30},{\"name\":\"coffee_c_notes\",\"targets\":31},{\"name\":\"coffee_d_bitterness\",\"targets\":32},{\"name\":\"coffee_d_acidity\",\"targets\":33},{\"name\":\"coffee_d_personal_preference\",\"targets\":34},{\"name\":\"coffee_d_notes\",\"targets\":35},{\"name\":\"prefer_abc\",\"targets\":36},{\"name\":\"prefer_ad\",\"targets\":37},{\"name\":\"prefer_overall\",\"targets\":38},{\"name\":\"wfh\",\"targets\":39},{\"name\":\"total_spend\",\"targets\":40},{\"name\":\"why_drink\",\"targets\":41},{\"name\":\"why_drink_other\",\"targets\":42},{\"name\":\"taste\",\"targets\":43},{\"name\":\"know_source\",\"targets\":44},{\"name\":\"most_paid\",\"targets\":45},{\"name\":\"most_willing\",\"targets\":46},{\"name\":\"value_cafe\",\"targets\":47},{\"name\":\"spent_equipment\",\"targets\":48},{\"name\":\"value_equipment\",\"targets\":49},{\"name\":\"gender\",\"targets\":50},{\"name\":\"gender_specify\",\"targets\":51},{\"name\":\"education_level\",\"targets\":52},{\"name\":\"ethnicity_race\",\"targets\":53},{\"name\":\"ethnicity_race_specify\",\"targets\":54},{\"name\":\"employment_status\",\"targets\":55},{\"name\":\"number_children\",\"targets\":56},{\"name\":\"political_affiliation\",\"targets\":57}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n## Using the templates: what to change\n\nUse this legend whenever you see a **Template** code block.\n\n- **`DATA`** → replace with your data frame/tibble name (e.g., `coffee`).\n- **`VAR`** → replace with the **single categorical variable** you want (e.g., `caffeine`).\n  - In `ggplot(DATA, aes(x = VAR))`, write `ggplot(coffee, aes(x = caffeine))`.\n  - In functions that take a vector (e.g., `cat_stats(DATA$VAR)`), write `cat_stats(coffee$caffeine)`.\n- **`VAR1`** and **`VAR2`** → replace with the **first** and **second** categorical variables for two‑way tables/stacked bars (e.g., `caffeine`, `taste`).\n- **`DF` / `wdf` / `df_pie` / `waffle_df`** → these are **intermediate objects** created in the chunk. You can keep the same names or rename them; if you rename, update the subsequent line that uses them.\n- **`group = 1`** → keep this as‑is for one‑variable proportion bar charts; it ensures correct normalization.\n\n### Quick replace checklist\n1. Swap **`DATA`** for your data frame (usually `coffee`).\n2. Swap **`VAR`** for your categorical column (e.g., `caffeine`).\n3. For two‑variable templates, set **`VAR1`** and **`VAR2`** (e.g., `caffeine` and `taste`).\n4. If you change any intermediate object name (like `df_pie`), update it on the next line as well.\n\n### Tiny example\n\n**Template**\n```r\n# Frequency bar (template)\n ggplot(DATA, aes(x = VAR)) +\n   geom_bar()\n```\n\n**Filled‑in**\n```r\n# Frequency bar (coffee example)\n ggplot(coffee, aes(x = caffeine)) +\n   geom_bar()\n```\n\n**Template**\n```r\n# Crosstab row proportions (template)\n cat_stats(VAR1, VAR2, prop = \"row\")\n```\n\n**Filled‑in**\n```r\n# Crosstab row proportions (coffee example)\n cat_stats(coffee$caffeine, coffee$taste, prop = \"row\")\n```\n\n\n# Categorical data 101\n\n**Categorical data** record membership in a set of categories (levels), e.g., \"Yes/No\", \"Major\", or \"City\".\n\n- Stored as text (character/factor) **or** as codes like `1, 2, 3` with a **codebook** describing the labels.\n\n\n# One‑variable summaries\n\n## Frequency (counts)\n\n**Definition:** number of observations in each category.\n\n**Template:**\n```r\n# Replace DATA$VAR with your variable\n# freq table (counts)\ncat_stats(DATA$VAR)\n```\n\n**Example:** caffeine preference (`coffee$caffeine`)\n\n::: {.cell}\n\n```{.r .cell-code}\ncat_stats(coffee$caffeine)\n```\n:::\n\n\n## Proportion (relative frequency)\n\n**Definition:** share of the sample in each category; comparable across sample sizes.\n\n**Template:**\n```r\n# proportions only\ncat_stats(DATA$VAR)\n```\n\n**Example:**\n\n::: {.cell}\n\n```{.r .cell-code}\ncat_stats(coffee$caffeine)\n```\n:::\n\n\n# Bar plots\n\n## Frequency bar plot\n\n**Template (frequency):**\n```r\n# ggplot() + geom_bar() counts rows per category by default\nggplot(DATA, aes(x = VAR)) +\n  geom_bar()\n```\n\n**Example:**\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(coffee, aes(x = caffeine)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](test_2_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Relative frequency bar plot\n\n**Template (proportion):**\n```r\n# after_stat(prop) computes proportions within the layer\nggplot(DATA, aes(x = VAR, y = after_stat(prop), group = 1)) +\n  geom_bar()\n```\n\n**Example:**\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(coffee, aes(x = caffeine, y = after_stat(prop), group = 1)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](test_2_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\n**Tip:** Add labels/theme as needed: `labs(x = \"\", y = \"Proportion\") + theme_minimal()`\n:::\n\n# Two‑variable summaries (cross‑tabulation)\n\nSuppose `taste` records whether participants like the taste of coffee.\n\n## Read the marginal distribution\n\n::: {.cell}\n\n```{.r .cell-code}\ncat_stats(coffee$taste)\n```\n:::\n\n\n## Cross‑tabulation (two‑way table)\n\n- **Rows**: categories of one variable\n- **Columns**: categories of the second variable\n- Report **counts** or **proportions** by **table**, **row**, or **column**\n\n**Table proportions** (each cell ÷ grand total):\n\n::: {.cell}\n\n```{.r .cell-code}\ncat_stats(coffee$caffeine, coffee$taste, prop = \"table\")\n```\n:::\n\n\n**Row proportions** (each cell ÷ its row total):\n\n::: {.cell}\n\n```{.r .cell-code}\ncat_stats(coffee$caffeine, coffee$taste, prop = \"row\")\n```\n:::\n\n\n**Column proportions** (each cell ÷ its column total):\n\n::: {.cell}\n\n```{.r .cell-code}\ncat_stats(coffee$caffeine, coffee$taste, prop = \"col\")\n```\n:::\n\n\n# Stacked bar plots\n\n**Template:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Stacked counts by default; map fill to the second variable\nggplot(DATA, aes(x = VAR1, fill = VAR2)) +\n  geom_bar()\n```\n\n::: {.cell-output .cell-output-error}\n\n```\n#> Error: object 'DATA' not found\n```\n\n\n:::\n:::\n\n\n**Example (stacked counts):**\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(coffee, aes(x = caffeine, fill = taste)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](test_2_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n**Example (horizontal):**\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(coffee, aes(y = caffeine, fill = taste)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](test_2_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n**Template (stacked proportions):**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Use position = \"fill\" for per‑x proportions\nggplot(DATA, aes(x = VAR1, fill = VAR2)) +\n  geom_bar(position = \"fill\") +\n  labs(y = \"Proportion\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\n#> Error: object 'DATA' not found\n```\n\n\n:::\n:::\n\n\n# Pie charts (use sparingly)\n\n**Note:** Pie charts can be harder to compare precisely than bars. If you use them, label clearly.\n\n**Template:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Derive counts then draw a pie using ggtricks::geom_pie()\ndf_pie <- cat_stats(DATA$VAR, tbl_df = TRUE)$table\n```\n\n::: {.cell-output .cell-output-error}\n\n```\n#> Error: object 'DATA' not found\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot(df_pie, aes(cat = Category, val = n, fill = Category)) +\n  geom_pie()\n```\n\n::: {.cell-output .cell-output-error}\n\n```\n#> Error: object 'df_pie' not found\n```\n\n\n:::\n:::\n\n\n**Example:**\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_pie <- cat_stats(coffee$caffeine, tbl_df = TRUE)$table\nggplot(coffee_pie, aes(cat = Category, val = n, fill = Category)) +\n  geom_pie()\n```\n\n::: {.cell-output-display}\n![](test_2_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n# Mosaic plots\n\nA mosaic plot shows a two‑way table with rectangle areas proportional to counts.\n\n**Template:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# ggmosaic uses product(VAR1, VAR2) in aes(x = ...)\nggplot(DATA) +\n  geom_mosaic(aes(x = product(VAR1, VAR2), fill = VAR2))\n```\n\n::: {.cell-output .cell-output-error}\n\n```\n#> Error: object 'DATA' not found\n```\n\n\n:::\n:::\n\n\n**Example:**\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(coffee) +\n  geom_mosaic(aes(x = product(caffeine, taste), fill = taste)) +\n  labs(x = \"caffeine × taste\", y = \"\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Warning: The `scale_name` argument of `continuous_scale()` is deprecated as of ggplot2\n#> 3.5.0.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Warning: The `trans` argument of `continuous_scale()` is deprecated as of ggplot2 3.5.0.\n#> ℹ Please use the `transform` argument instead.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Warning: `unite_()` was deprecated in tidyr 1.2.0.\n#> ℹ Please use `unite()` instead.\n#> ℹ The deprecated feature was likely used in the ggmosaic package.\n#>   Please report the issue at <https://github.com/haleyjeppson/ggmosaic>.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](test_2_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n# Waffle charts\n\nA waffle chart is a 10×10‑style grid where each square often represents 1%.\n\n**Template:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Build a counts table then call geom_waffle(); set make_proportional = TRUE\nwaffle_df <- cat_stats(DATA$VAR, tbl_df = TRUE)$table\n```\n\n::: {.cell-output .cell-output-error}\n\n```\n#> Error: object 'DATA' not found\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot(waffle_df, aes(fill = Category, values = n)) +\n  geom_waffle(make_proportional = TRUE)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\n#> Error: object 'waffle_df' not found\n```\n\n\n:::\n:::\n\n\n**Example:**\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_waffle <- cat_stats(coffee$caffeine, tbl_df = TRUE)$table\nggplot(coffee_waffle, aes(fill = Category, values = n)) +\n  geom_waffle(make_proportional = TRUE) +\n  labs(x = NULL, y = NULL)\n```\n\n::: {.cell-output-display}\n![](test_2_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n# Appendix: minimal templates (copy‑paste)\n\nEach template below has **placeholders** in ALL CAPS (e.g., `DATA`, `VAR`, `VAR1`, `VAR2`). Replace them with your own dataset name and variable names.\n\n::: callout-important\n**How to customize placeholders:**\n- `DATA` → the name of your dataset (e.g., `coffee`).\n- `VAR` → a single categorical variable (e.g., `caffeine`).\n- `VAR1`, `VAR2` → two categorical variables for cross‑tabulations (e.g., `caffeine`, `taste`).\n:::\n\n```r\n# Frequency table\ncat_stats(DATA$VAR)   \n```\n```r\n# Proportions only\ncat_stats(DATA$VAR, prop_only = TRUE)\n```\n```r\n# Bar: frequency\nggplot(DATA, aes(x = VAR)) + \n    geom_bar()\n```\n```r\n# Bar: proportion\nggplot(DATA, aes(x = VAR, y = after_stat(prop), group = 1)) + \n    geom_bar()\n```\n```r\n# Crosstab counts\ncat_stats(DATA$VAR1, DATA$VAR2)\n```\n```r\n# Crosstab proportions\ncat_stats(DATA$VAR1, DATA$VAR2, prop = \"table\")\ncat_stats(DATA$VAR1, DATA$VAR2, prop = \"row\")\ncat_stats(DATA$VAR1, DATA$VAR2, prop = \"col\")\n```\n```r\n# Stacked bar (counts)\nggplot(DATA, aes(x = VAR1, fill = VAR2)) + geom_bar()\n```\n```r\n# Stacked bar (proportions)\nggplot(DATA, aes(x = VAR1, fill = VAR2)) +\n  geom_bar(position = \"fill\") + labs(y = \"Proportion\")\n```\n```r\n# Pie\ndf_pie <- cat_stats(DATA$VAR, tbl_df = TRUE)$table\nggplot(df_pie, aes(cat = Category, val = n, fill = Category)) + \n    geom_pie()\n```\n```r\n# Mosaic\nggplot(DATA) +\n  geom_mosaic(aes(x = product(VAR1, VAR2), fill = VAR2))\n```\n```r\n# Waffle\nwdf <- cat_stats(DATA$VAR, tbl_df = TRUE)$table\nggplot(wdf, aes(fill = Category, values = n)) +\n  geom_waffle(make_proportional = TRUE)\n```\n",
    "supporting": [
      "test_2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}